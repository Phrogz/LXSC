<assertions>
	<assert id="187" res="not-impl">No support for 'invoke'</assert>
	<assert id="191" res="not-impl">No support for 'invoke'</assert>
	<assert id="192" res="not-impl">No support for 'invoke'</assert>
	<assert id="207" res="not-impl">No support for 'invoke'</assert>
	<assert id="215" res="not-impl">No support for 'invoke'</assert>
	<assert id="216" res="not-impl">No support for 'invoke'</assert>
	<assert id="220" res="not-impl">No support for 'invoke'</assert>
	<assert id="223" res="not-impl">No support for 'invoke'</assert>
	<assert id="224" res="not-impl">No support for 'invoke'</assert>
	<assert id="225" res="not-impl">No support for 'invoke'</assert>
	<assert id="226" res="not-impl">No support for 'invoke'</assert>
	<assert id="228" res="not-impl">No support for 'invoke'</assert>
	<assert id="229" res="not-impl">No support for 'invoke'</assert>
	<assert id="232" res="not-impl">No support for 'invoke'</assert>
	<assert id="233" res="not-impl">No support for 'invoke'</assert>
	<assert id="234" res="not-impl">No support for 'invoke'</assert>
	<assert id="235" res="not-impl">No support for 'invoke'</assert>
	<assert id="235" res="not-impl">No support for 'invoke'</assert>
	<assert id="236" res="not-impl">No support for 'invoke'</assert>
	<assert id="237" res="not-impl">No support for 'invoke'</assert>
	<assert id="239" res="not-impl">No support for 'invoke'</assert>
	<assert id="240" res="not-impl">No support for 'invoke'</assert>
	<assert id="241" res="not-impl">No support for 'invoke'</assert>
	<assert id="242" res="not-impl">No support for 'invoke'</assert>
	<assert id="243" res="not-impl">No support for 'invoke'</assert>
	<assert id="244" res="not-impl">No support for 'invoke'</assert>
	<assert id="245" res="not-impl">No support for 'invoke'</assert>
	<assert id="247" res="not-impl">No support for 'invoke'</assert>
	<assert id="252" res="not-impl">No support for 'invoke'</assert>
	<assert id="253" res="not-impl">No support for 'invoke'</assert>
	<assert id="276" res="not-impl">No support for 'invoke'</assert>
	<assert id="338" res="not-impl">No support for 'invoke'</assert>
	<assert id="347" res="not-impl">No support for 'invoke'</assert>
	<assert id="422" res="not-impl">No support for 'invoke'</assert>
	<assert id="496" res="not-impl">No support for 'send' to external targets</assert>
	<assert id="500" res="not-impl">No support for IO Processors</assert>
	<assert id="521" res="not-impl">No support for 'send' to external targets</assert>
	<assert id="530" res="not-impl">No support for 'invoke'</assert>
	<assert id="554" res="not-impl">No support for 'invoke'</assert>

	<!-- manual -->
	<assert id="178" res="fail">The LXSC data model cannot support multiple key/value pairs with the same key name.</assert>
	<assert id="230" res="not-impl">No support for 'invoke'</assert>
	<assert id="250" res="not-impl">No support for 'invoke'</assert>
	<assert id="301" res="pass"/>
	<assert id="307" res="pass">The late binding works, but an error is only raised in s1, since in s0 it is valid in the LXSC Lua data model to access a variable that has not yet been set.</assert>
	<assert id="313" res="pass">The document is not rejected, but does raise an internal error during execution.</assert>
	<assert id="314" res="pass">The document is not rejected, but does raise an internal error during execution when s03 is entered.</assert>
	<assert id="415" res="pass">The event is raised, but remains on the internal queue after the interpreter is stopped.</assert>
<assertions>
